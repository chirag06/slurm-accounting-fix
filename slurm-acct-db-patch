#!/bin/bash

[ $# -lt 1 ] && { echo "Usage: $0 <filename>"; exit 1; }

while read eachline; do

     start_time=`echo $eachline | cut -d '|' -f5`
     start_time_epoch=`echo $(date +%s --date="$start_time")`
     resvcpuraw=`echo $eachline | cut -d '|' -f7`
     correct_end_time=$(($start_time_epoch + $resvcpuraw))
     formatted_correct_end_time=`echo $(date +%Y-%m-%dT%H:%M:%S --date="@$correct_end_time")`
     #echo $jobid'|'$start_time'|'$resvcpuraw'|'$formatted_correct_time

     jobid=`echo $eachline | cut -d '|' -f1`
     regex='[0-9]{1,}_[0-9]{1,}'     # Regex to find the array jobs

     if [[ $jobid =~ $regex ]]; # If it's an array job split into taskID and RawJobID
     then
       #echo ${BASH_REMATCH[1]}
       raw_job_id=`echo $jobid | cut -d '_' -f1`
       id_array_task=`echo $jobid | cut -d '_' -f2`
       echo updating array job $raw_job_id '|' task $id_array_task time_end=$correct_end_time
       mysql -u root -D slurm_acct_db -e "UPDATE slurm_cluster_job_table SET time_end="$correct_end_time" WHERE id_array_job="$raw_job_id" && id_array_task="$id_array_task";"
       echo -e "\n"
  else
     echo updating job $jobid with time_end=$correct_end_time
     mysql -u root -D slurm_acct_db -e "UPDATE slurm_cluster_job_table SET time_end="$correct_end_time" WHERE id_job="$jobid";"
  fi
done < "${1:-/dev/stdin}"
